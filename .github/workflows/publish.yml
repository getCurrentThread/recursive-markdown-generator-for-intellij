name: Build, Publish Plugin and Create Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  packages: write
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Update plugin version
        run: |
          sed -i 's/version = ".*"/version = "${{ steps.get_version.outputs.VERSION }}"/' build.gradle.kts

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: plugin-artifact
          path: build/distributions/*.zip

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Extract version from tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: Update plugin version
        run: |
          sed -i 's/version = ".*"/version = "${{ steps.get_version.outputs.VERSION }}"/' build.gradle.kts

      - name: Publish Plugin
        env:
          PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
          CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
        run: ./gradlew publishPlugin

      - name: Generate changelog
        id: github_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter.yml
          version: ${{ steps.get_version.outputs.VERSION }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.github_release.outputs.body }}
          draft: false
          prerelease: false

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: plugin-artifact

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.github_release.outputs.upload_url }}
          asset_path: ./recursive-markdown-generator-${{ steps.get_version.outputs.VERSION }}.zip
          asset_name: recursive-markdown-generator-${{ steps.get_version.outputs.VERSION }}.zip
          asset_content_type: application/zip
